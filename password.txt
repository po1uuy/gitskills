package xiangmu;
import java.util.Scanner;
public class PasswordManager {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
        boolean running = true;

        while (running) {
            System.out.println("请选择操作（1-加密，2-解密，0-退出）：");
            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    System.out.println("请输入要加密的密码：");
                    String passwordToEncrypt = scanner.nextLine();
                    String encryptedPassword = encryptPassword(passwordToEncrypt);
                    System.out.println("加密后的密码：" + encryptedPassword);
                    break;

                case 2:
                    System.out.println("请输入要解密的密码：");
                    String passwordToDecrypt = scanner.nextLine();
                    String decryptedPassword = decryptPassword(passwordToDecrypt);
                    System.out.println("解密后的密码：" + decryptedPassword);
                    break;

                case 0:
                    running = false;
                    break;

                default:
                    System.out.println("无效的选择！");
            }
            System.out.println();
        }

        scanner.close();
    }

    public static String encryptPassword(String password) {
        StringBuilder encrypted = new StringBuilder();

        for (int i = 0; i < password.length(); i++) {
            char c = password.charAt(i);
            int ascii = (int) c;
            int offset = i + 1 + 3;
            int encryptedAscii = ascii + offset;
            encrypted.append((char) encryptedAscii);
        }

        if (encrypted.length() > 1) {
            char firstChar = encrypted.charAt(0);
            char lastChar = encrypted.charAt(encrypted.length() - 1);
            encrypted.setCharAt(0, lastChar);
            encrypted.setCharAt(encrypted.length() - 1, firstChar);
        }

        encrypted.reverse();

        return encrypted.toString();
    }

    public static String decryptPassword(String encryptedPassword) {
        StringBuilder decrypted = new StringBuilder(encryptedPassword);

        decrypted.reverse();

        if (decrypted.length() > 1) {
            char firstChar = decrypted.charAt(0);
            char lastChar = decrypted.charAt(decrypted.length() - 1);
            decrypted.setCharAt(0, lastChar);
            decrypted.setCharAt(decrypted.length() - 1, firstChar);
        }

        for (int i = 0; i < decrypted.length(); i++) {
            char c = decrypted.charAt(i);
            int ascii = (int) c;
            int offset = i + 1 + 3;
            int decryptedAscii = ascii - offset;
            decrypted.setCharAt(i, (char) decryptedAscii);
        }

        return decrypted.toString();
    }
    
	}


